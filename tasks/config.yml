---

- name: Create/update Mailman Core configuration
  template:
    src: mailman.cfg.j2
    dest: "{{ mailman3_etc_dir }}/mailman.cfg"
    group: "{{ __mailman3_group_name }}"
    mode: "0640"
    backup: "{{ mailman3_backup_configs }}"
  notify:
    - restart mailman3-core service

- name: Create/update Django project
  template:
    src: "{{ item.name }}.j2"
    mode: "{{ item.mode }}"
    dest: "{{ mailman3_django_project_dir }}/{{ item.name }}"
    backup: "{{ mailman3_backup_configs }}"
  with_items:
    - name: manage.py
      mode: "0755"
    - name: settings.py
      mode: "0644"
    - name: urls.py
      mode: "0644"
    - name: wsgi.py
      mode: "0644"
  when: __mailman3_pip

- name: Create/update Django local settings
  template:
    src: "settings_local.py.j2"
    dest: "{{ mailman3_django_settings_file }}"
    group: "{{ __mailman3_group_name }}"
    mode: "0640"
    backup: "{{ mailman3_backup_configs }}"
  notify:
    - restart mailman3-web service

- name: Create Django local settings symlink
  file:
    src: "{{ mailman3_django_settings_file }}"
    dest: "{{ mailman3_django_project_dir }}/settings_local.py"
    state: link
  when: __mailman3_pip
  notify:
    - restart mailman3-web service

# This runs before collectstatic because it creates the log file, which must be created as the web user
- name: Create/update Django DB schema
  django_manage:
    app_path: "{{ mailman3_django_project_dir }}"
    command: migrate
    virtualenv: "{{ mailman3_install_dir }}"
  # FIXME:
  become: yes
  become_user: "{{ mailman3_web_user }}"
  become_method: su
  become_flags: '-s /bin/sh'
  notify:
    - restart mailman3-web service

- name: Collect Django static files
  django_manage:
    app_path: "{{ mailman3_django_project_dir }}"
    command: collectstatic
    virtualenv: "{{ mailman3_install_dir }}"
  when: __mailman3_pip

- name: Create/update uWSGI configuration file
  template:
    src: uwsgi.ini.j2
    dest: "{{ mailman3_etc_dir }}/uwsgi.ini"
  when: __mailman3_pip
  notify:
    - restart mailman3-web service

# This is idempotent so it's safe to do as an always-run task
- name: Compress CSS
  django_manage:
    app_path: "{{ mailman3_django_project_dir }}"
    command: compress
    virtualenv: "{{ mailman3_install_dir }}"
